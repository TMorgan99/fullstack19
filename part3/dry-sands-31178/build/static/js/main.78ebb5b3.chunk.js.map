{"version":3,"sources":["services/people.js","components/Notification.js","components/Phonebook.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","classMessage","split","className","message","console","log","PhoneNumber","phoneNumber","remove","onClick","name","number","PeopleList","people","filter","filterRegEx","RegExp","listing","search","map","key","Field","label","value","handle","htmlFor","onChange","Filter","clear","PeopleForm","submit","fields","onSubmit","type","App","useState","setPeople","setSearch","newName","setNewName","newNumber","setNewNumber","setClassMessage","notificationWithTimeout","setTimeout","useEffect","peopleService","catch","error","event","target","preventDefault","newItemObject","isFound","find","window","confirm","newRecord","newPeople","item","updateItem","concat","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78ebb5b3.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  // console.log( 'get: ', baseUrl)\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n//\r\nconst create = newObject => {\r\n  // console.log( 'post: ', baseUrl)\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  // console.log( \"put: \", `${baseUrl}/${id}`)\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  // console.log('delete:', `${baseUrl}/${id}`)\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request\r\n}\r\n\r\nexport default { getAll, create, update, remove }\r\n","import React from 'react'\r\n\r\n// ////////////////////////////////////////////////////////////////////\r\n// const Notification = ({notice, text}) => {\r\n  const Notification = ({classMessage}) => {\r\n    // encode both text and class in one state component\r\n\r\n  if (classMessage === null)    return null\r\n  const [className, message] = classMessage.split(':')\r\n  console.log( 'Notification', className, message)\r\n  return (\r\n    <div className={className}>\r\n     {message}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport { Notification }\r\n","import React from 'react'\r\n\r\n// ////////////////////////////////////////////////////////////////////\r\n// format a line in the PhoneList table\r\nconst PhoneNumber = ({phoneNumber, remove }) =>\r\n  <tr>\r\n    <td> <button onClick={()=>remove(phoneNumber.id)}> x </button> </td>\r\n    <td>{phoneNumber.name}</td>\r\n    <td>{phoneNumber.number}</td>\r\n  </tr>\r\n\r\n// ////////////////////////////////////////////////////////////////////\r\n// show the PhoneList table\r\nconst PeopleList = ({people, remove, filter}) => {\r\n\r\n  const filterRegEx = new RegExp(filter, 'i')\r\n\r\n  const filteredListings = () => {\r\n    return people\r\n      .filter(listing => {\r\n          return listing.name.search(filterRegEx)>=0\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Numbers</h2>\r\n      <table className='center' >\r\n        <tbody>\r\n          <tr>\r\n            <th> [x] </th>\r\n            <th> Name </th>\r\n            <th> Number </th>\r\n          </tr>\r\n          { filteredListings().map( phoneNumber =>\r\n            <PhoneNumber key={phoneNumber.id}\r\n              phoneNumber={phoneNumber} remove={remove} />\r\n          ) }\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\n\r\n// ////////////////////////////////////////////////////////////////////\r\n// simple field for unputs\r\nconst Field = ({label, value, handle}) =>\r\n  <>\r\n    <label htmlFor=\"name\">{label}</label>\r\n    <input name={label} value={value} onChange={handle} />\r\n  </>\r\n\r\n// input searach filter\r\nconst Filter = ({search, clear}) =>\r\n  <>\r\n    <fieldset>\r\n      <legend>Search</legend>\r\n      <div>\r\n        <Field label={search.label} value={search.value} handle={search.handle} />\r\n        <button onClick={clear}> x </button>\r\n      </div>\r\n    </fieldset>\r\n  </>\r\n\r\n// ////////////////////////////////////////////////////////////////////\r\n// add numbers to the list\r\nconst PeopleForm = ({submit, fields}) =>\r\n  <form onSubmit={submit}>\r\n    <fieldset>\r\n      <legend>New Entry</legend>\r\n      <div>\r\n        <Field label={fields[0].label} value={fields[0].value} handle={fields[0].handle} />\r\n      </div>\r\n      <div>\r\n        <Field label={fields[1].label} value={fields[1].value} handle={fields[1].handle} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">[add]</button>\r\n      </div>\r\n    </fieldset>\r\n  </form>\r\n\r\nexport { Filter, PeopleForm, PeopleList }\r\n","import React, {useEffect, useState} from 'react'\r\nimport peopleService from './services/people'\r\nimport { Notification }  from './components/Notification'\r\nimport { Filter, PeopleForm, PeopleList }  from './components/Phonebook'\r\nimport './App.css'\r\n\r\n// testing update of edleted record.\r\n// const TESTING_REMOTE_DELETE = true\r\n\r\n// ////////////////////////////////////////////////////////////////////\r\nconst App = () => {\r\n  const [ people, setPeople] = useState([])\r\n  const [ search, setSearch ] = useState('')\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ classMessage, setClassMessage ] = useState(null)\r\n\r\n  const handleSearchChange = (event) =>\r\n      setSearch(event.target.value)\r\n  const handleNameChange = (event) =>\r\n      setNewName(event.target.value)\r\n  const handleNumberChange = (event) =>\r\n      setNewNumber(event.target.value)\r\n\r\n  // //////////////////////////////////////////////////////////////////\r\n  const notificationWithTimeout = (classMessage) => {\r\n    console.log( 'setup', classMessage)\r\n    setClassMessage(classMessage)\r\n    setTimeout(()=> { setClassMessage(null) }, 2500)\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////\r\n  useEffect( () => {\r\n      // console.log('effect..')\r\n      notificationWithTimeout('info:please wait for the data to load')\r\n      peopleService.getAll()\r\n        .then(response => {\r\n          // console.log('promise fulfilled:', response )\r\n          setPeople(response)\r\n        })\r\n        .catch( error => { console.log( error )\r\n        })\r\n      }, [])\r\n\r\n  // //////////////////////////////////////////////////////////////////\r\n  const updateItem = (id, newItemObject) => {\r\n    // if (TESTING_REMOTE_DELETE)\r\n    //   peopleService.remove(id)  // simulate the other client\r\n    // but do not update our UI\r\n\r\n    peopleService.update( id, newItemObject )\r\n      .then(newRecord => {\r\n        const newPeople = people.map( item => item.id === id ? newRecord : item )\r\n        setPeople(newPeople)\r\n        notificationWithTimeout( `info:${newName} has been updated` )\r\n      })\r\n      .catch(error => {\r\n        console.log('deleted record:', error)  // code 404\r\n        notificationWithTimeout( `error:this record has been deleted remotely` )\r\n        // refresh with server\r\n        peopleService.getAll()\r\n          .then(response => {\r\n            console.log('refresh')\r\n            setPeople(response)\r\n          })\r\n          .catch( error => { console.log( error ) })\r\n      })\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////\r\n  const addItem = (event) => {\r\n    // console.log('add item')\r\n    event.preventDefault()\r\n    const newItemObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    }\r\n\r\n    const isFound = people.find(listing => listing.name === newName)\r\n    if (isFound && window.confirm(\r\n        `${newName} has already been added to phonebook\r\n        Did you want to update the number?`)) {\r\n          updateItem(isFound.id, newItemObject)\r\n        }\r\n    else { // create new record\r\n      peopleService.create( newItemObject )\r\n        .then(response => {  // add the 'id' field\r\n          setPeople(people.concat(response))\r\n          notificationWithTimeout( `info:${response.name} has been added` )\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////\r\n  const removeItem = (id) => {\r\n    // find the record in question!\r\n    // this is not a simple index, we need to find it by id.\r\n    const item = people.filter( p=>p.id===id)[0]\r\n    if ( window.confirm( `Do you want to remove '${item.name}' ?` )) {\r\n        console.log( `The user has requested the removal of ${id}`)\r\n      peopleService.remove(id)\r\n        // this could be a .then chain?\r\n      setPeople( people.filter(item => item.id !== id) )\r\n      notificationWithTimeout(`info:${item.name} has been removed`)\r\n    }\r\n  }\r\n\r\n  // console.log('render', people.length, 'directory entries')\r\n  // //////////////////////////////////////////////////////////////////\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        Phonebook\r\n        <Notification classMessage={classMessage} />\r\n      </header>\r\n      <Filter\r\n        search={ {label: 'search', value: search, handle: handleSearchChange} }\r\n        clear={()=>setSearch('') }\r\n      />\r\n      <PeopleForm\r\n        submit={addItem}\r\n        fields={ [\r\n            { label: 'name', value: newName, handle: handleNameChange },\r\n            { label: 'number', value: newNumber, handle: handleNumberChange },\r\n        ]}\r\n      />\r\n\r\n      <PeopleList people={people} remove={removeItem} filter={search}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}